#make install
set(EXECUTABLE_OUTPUT_PATH ${UT_BIN_PATH})
find_package(GTest CONFIG REQUIRED)
find_package(benchmark CONFIG REQUIRED)
macro(add_test_target TEST_TARGET)
    set(target "${TEST_TARGET}")
    add_executable("${target}" "${PROJECT_SOURCE_DIR}/ut/${TEST_TARGET}_test.cpp")
    if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0)
        target_compile_options(${target} PRIVATE -std=c++11)
    else()
        target_compile_options(${target} PRIVATE -std=c++17)
    endif()
    target_link_libraries(${target} PRIVATE tl::component)
endmacro(add_test_target)

function(add_test_library TEST_TARGET)  
    set(target "${TEST_TARGET}")
    add_executable("${target}" "${PROJECT_SOURCE_DIR}/ut/${TEST_TARGET}_test.cpp")
    target_compile_options(${target} PRIVATE -std=c++17)
    message("-- UT ARGC = ${ARGC} , ARGV = ${ARGV} , TEST_TARGET = ${TEST_TARGET}")
    set(INDEX 1)  
    while(INDEX LESS ${ARGC})  
        set(ag ${ARGV${INDEX}})
        if("${ag}" MATCHES "^-")
            target_compile_options(${target} PRIVATE  ${ag})
            message("-- UT COMPILE OPTIONS = ${ag}")  
        else()
            target_link_libraries(${target} PRIVATE ${ag})
            message("-- UT LINK LIBRARY = ${ag}")  
        endif()
        math(EXPR INDEX "${INDEX} + 1")  
    endwhile() 
endfunction(add_test_library)

add_test_library(spdlog tl::component)
add_test_target(function)
add_test_library(task tl::component)
add_test_library(then tl::component)
add_test_library(threadpool tl::component)
add_test_library(threadpool_singleton tl::component)

# protobuf ut
find_package(Protobuf CONFIG REQUIRED)
protobuf_generate_cpp(PROTO_SRCS PROTO_HDRS ${PROJECT_SOURCE_DIR}/protocol/message.proto)
add_executable(protobuf ${PROJECT_SOURCE_DIR}/ut/protobuf_test.cpp
                        ${PROTO_SRCS}
                        ${PROTO_HDRS})
target_include_directories(protobuf PRIVATE ${PROTOBUF_INCLUDE_DIRS})
target_include_directories(protobuf PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
target_link_libraries(protobuf PRIVATE protobuf::libprotoc protobuf::libprotobuf protobuf::libprotobuf-lite)
